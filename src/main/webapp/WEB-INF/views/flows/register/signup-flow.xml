<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow.xsd">
	
	
	<!--  declare models going to be used in the flow -->
	<var name="user" class="com.inovisionsoftware.model.User"/>
	<var name="billing" class="com.inovisionsoftware.model.Address"/>
	
	<!-- Creating a RegisterModel instance at start of flow -->
	<on-start>
		<evaluate expression="registerHandler.init()" result="flowScope.registerModel"/>
	</on-start>
	
	<!--  Start state (is normally the first view-state defined in the XML) -->
	<!-- create a new model object for this state of flow -->
	<view-state id="personalState" view="flows/register/signup-personal" model="user">
		<transition on="billing" to="validateState"></transition>
		<on-exit>
			<evaluate expression="registerHandler.addUser(flowScope.registerModel, user)"></evaluate>
		</on-exit>
	</view-state>
	
	<action-state id="validateState">
		<evaluate expression="registerHandler.validateUser(user, messageContext)"/>
		<transition on="valid" to="billingState"/>
		<transition on="invalid" to="personalState"/>
	</action-state>

	<view-state id="billingState" view="flows/register/signup-billing" model="billing">
		<transition on="personal" to="personalState"></transition>
		<transition on="confirm" to="confirmState"></transition>
		<on-exit>
			<evaluate expression="registerHandler.addBilling(flowScope.registerModel, billing)"></evaluate>
		</on-exit>
	</view-state>

	<view-state id="confirmState" view="flows/register/signup-confirm" model="flowScope.registerModel">
		<transition on="personal" to="personalState"/>
		<transition on="billing" to="billingState"/>
		<transition on="submit" to="submitAction"/>
	</view-state>
	
	<action-state id="submitAction">
		<evaluate expression="registerHandler.saveAll(flowScope.registerModel)"/>
		<transition on="success" to="successEnd"></transition>
	</action-state>
	
	<!-- End States -->
	<end-state id="homeEnd" view="externalRedirect:contextRelative:/"></end-state>	
	<end-state id="successEnd" view="flows/register/signup-success"></end-state>
	
	<view-state id="errorState" view="flows/register/signup-error">
		<transition on="personal" to="personalState"/>
	</view-state>
	
	<!-- Global transition applicable to all views -->
	<global-transitions>	
		<!-- on is the id of this transistion specified in _eventId_home  -->
		<!-- to is the state id to which we want to transition to (in this case it is end state home specified in end-state) -->
		<transition on="home" to="homeEnd" validate="false"/>
		
		<!-- Global Error handling for this flow -->
		<transition on-exception="java.lang.Exception" to="errorState" validate="false" />
	</global-transitions>
	<!-- 
	<exception-handler bean="myflowExceptionHandler"/>
	 -->
	
	
</flow>